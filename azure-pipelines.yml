# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  dockerId: jonasfred
  imageNameWeb: tv-show-reminder

steps:

- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core sdk 2.2.203'
  inputs:
    version: 2.2.203

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build, Configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude="[xunit*]*"'
    projects: 'test/**/*.csproj'
    nobuild: true

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:$(Build.SourcesDirectory)/test/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:Cobertura
  displayName: 'Create code coverage report'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- script: docker build -t $(dockerId)/$(imageNameWeb):latest -t $(dockerId)/$(imageNameWeb):$(Build.BuildId) .
  displayName: 'Build Docker image for Website'

- script: |
    docker login -u $(dockerId) -p $(dockerPassword)
    docker push $(dockerId)/$(imageNameWeb):$(Build.BuildId)
    docker push $(dockerId)/$(imageNameWeb):latest
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Publish Docker image (from master branch)' 